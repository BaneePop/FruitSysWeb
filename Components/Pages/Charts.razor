@page "/charts"
@using FruitSysWeb.Services.Interfaces
@using FruitSysWeb.Services.Models.Requests
@using FruitSysWeb.Components.Shared.Filters
@using FruitSysWeb.Components.Shared.Layout


@inject IFinansijeService FinansijeService
@inject IProizvodnjaService ProizvodnjaService
@inject IExportService ExportService
@inject IJSRuntime JSRuntime




@using FruitSysWeb.Components.Shared.Charts

<div class="container-fluid">
    <!-- Header -->
    <div class="financial-header text-white py-4 mb-4">
        <div class="container-fluid">
            <h1 class="h2 mb-1">
                <i class="bi bi-graph-up me-2"></i>Charts Test
            </h1>
            <p class="mb-0">Testiranje Chart.js komponenti</p>
        </div>
    </div>

    <!-- Simple Test Charts -->
    <div class="row">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5><i class="bi bi-bar-chart me-2"></i>Test Bar Chart</h5>
                </div>
                <div class="card-body">
                    <BarChart Data="@barData" 
                              Title="Test Prodaja" 
                              Width="400" 
                              Height="300" 
                              ChartType="bar" />
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5><i class="bi bi-pie-chart me-2"></i>Test Pie Chart</h5>
                </div>
                <div class="card-body">
                    <PieChart Data="@pieData" 
                              Title="Test Struktura" 
                              Width="400" 
                              Height="300" />
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5><i class="bi bi-graph-up me-2"></i>Test Line Chart</h5>
                </div>
                <div class="card-body">
                    <LineChart Data="@lineData" 
                               Title="Test Trend" 
                               Width="600" 
                               Height="300" 
                               Color="rgba(75, 192, 192, 0.8)"
                               Fill="false" />
                </div>
            </div>
        </div>
    </div>

    <!-- Refresh Button -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center">
                    <button class="btn btn-primary" @onclick="RefreshData">
                        <i class="bi bi-arrow-clockwise me-2"></i>Refresh Charts
                    </button>
                    <p class="mt-2 text-muted">Last update: @lastUpdate.ToString("HH:mm:ss")</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Dictionary<string, decimal> barData = new();
    private Dictionary<string, decimal> pieData = new();
    private Dictionary<string, decimal> lineData = new();
    private DateTime lastUpdate = DateTime.Now;

    protected override void OnInitialized()
    {
        GenerateTestData();
    }

    private void GenerateTestData()
    {
        // Test Bar Chart Data
        barData = new Dictionary<string, decimal>
        {
            {"Malina", 150.5m},
            {"Kupina", 230.0m},
            {"Šljiva", 180.75m},
            {"Višnja", 95.25m},
            {"Jagoda", 275.0m}
        };

        // Test Pie Chart Data
        pieData = new Dictionary<string, decimal>
        {
            {"Sirovina", 45.2m},
            {"Ambalaza", 32.8m},
            {"Gotova roba", 18.5m},
            {"Materijal", 22.3m},
            {"Ostalo", 15.7m}
        };

        // Test Line Chart Data
        lineData = new Dictionary<string, decimal>
        {
            {"Jan 2025", 120.5m},
            {"Feb 2025", 135.0m},
            {"Mar 2025", 150.75m},
            {"Apr 2025", 145.25m},
            {"May 2025", 165.0m},
            {"Jun 2025", 180.5m},
            {"Jul 2025", 175.0m},
            {"Aug 2025", 195.25m},
            {"Sep 2025", 210.0m}
        };

        lastUpdate = DateTime.Now;
    }

    private void RefreshData()
    {
        var random = new Random();
        
        // Generate random bar data
        barData = new Dictionary<string, decimal>();
        var fruits = new[] { "Malina", "Kupina", "Šljiva", "Višnja", "Jagoda", "Borovnica" };
        foreach (var fruit in fruits)
        {
            barData[fruit] = (decimal)(random.NextDouble() * 300 + 50);
        }

        // Generate random pie data
        pieData = new Dictionary<string, decimal>();
        var categories = new[] { "Sirovina", "Ambalaza", "Gotova roba", "Materijal", "Oprema" };
        foreach (var category in categories)
        {
            pieData[category] = (decimal)(random.NextDouble() * 50 + 10);
        }

        // Generate random line data
        lineData = new Dictionary<string, decimal>();
        var months = new[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" };
        foreach (var month in months)
        {
            lineData[$"{month} 2025"] = (decimal)(random.NextDouble() * 200 + 100);
        }

        lastUpdate = DateTime.Now;
        StateHasChanged();
    }
}

<style>
    .financial-header {
        background: linear-gradient(135deg, #198754 0%, #0f5132 100%);
    }

    .card {
        border: none;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        border-radius: 12px;
        margin-bottom: 1.5rem;
    }

    .card-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-bottom: 1px solid #dee2e6;
        font-weight: 600;
        color: #0f5132;
        border-radius: 12px 12px 0 0 !important;
    }

    .card-body {
        padding: 1.5rem;
    }

    .btn-primary {
        background: linear-gradient(135deg, #0d6efd 0%, #0a58ca 100%);
        border: none;
        padding: 0.5rem 1.5rem;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
    }
</style>
