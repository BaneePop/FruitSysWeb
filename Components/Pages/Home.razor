@page "/"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

@using FruitSysWeb.Services.Interfaces
@using FruitSysWeb.Services.Models.Requests
@using FruitSysWeb.Components.Charts
@using FruitSysWeb.Components.Shared.Layout
@inject IFinansijeService FinansijeService
@inject IProizvodnjaService ProizvodnjaService
@inject IMagacinLagerService LagerService
@inject IExportService exportService
@inject NavigationManager NavigationManager

<style>
    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }
    
    .quick-action {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border-left: 4px solid #198754;
        cursor: pointer;
    }
    
    .quick-action:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.15);
    }
    
    .quick-action-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        color: #198754;
    }
    
    .quick-action-title {
        font-weight: 600;
        color: #0f5132;
        margin-bottom: 0.5rem;
    }
    
    .quick-action-desc {
        color: #6c757d;
        font-size: 0.9rem;
    }
    
    .dashboard-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        margin-bottom: 1.5rem;
    }

    .section-title {
        margin-bottom: 0;
        font-weight: 600;
        color: #0f5132;
    }
</style>

<!-- Header -->
<div class="financial-header text-white py-4 mb-4">
    <div class="container-fluid">
        <h1 class="h2 mb-1">
            <i class="bi bi-speedometer2 me-2"></i>Dashboard
        </h1>
        <p class="mb-0">Pregled ključnih poslovnih pokazatelja</p>
    </div>
</div>

<div class="container-fluid">
    <!-- Quick Actions -->
    <div class="dashboard-grid">
        <div class="quick-action" @onclick="NavigateToFinansije">
            <div class="quick-action-icon">
                <i class="bi bi-cash-coin"></i>
            </div>
            <div class="quick-action-title">Finansije</div>
            <div class="quick-action-desc">Pregled prihoda, rashoda i salda</div>
        </div>

        <div class="quick-action" @onclick="NavigateToProizvodnja">
            <div class="quick-action-icon">
                <i class="bi bi-gear"></i>
            </div>
            <div class="quick-action-title">Proizvodnja</div>
            <div class="quick-action-desc">Radni nalozi i analiza prerade</div>
        </div>

        <div class="quick-action" @onclick="NavigateToLager">
            <div class="quick-action-icon">
                <i class="bi bi-boxes"></i>
            </div>
            <div class="quick-action-title">Lager</div>
            <div class="quick-action-desc">Stanje sirovina i gotovih proizvoda</div>
        </div>

        <div class="quick-action" @onclick="NavigateToIzvjestaji">
            <div class="quick-action-icon">
                <i class="bi bi-clipboard-data"></i>
            </div>
            <div class="quick-action-title">Izveštaje</div>
            <div class="quick-action-desc">Detaljni poslovni izveštaje</div>
        </div>
    </div>

    <!-- Statistics -->
    <DashboardStats Value1="@ukupnoSaldo"
                    Value2="@ukupnaVrednostLager"
                    Value3="@ukupnaProizvodnja"
                    Value4="@brojAktivnihNaloga"
                    Label1="Ukupno Saldo"
                    Label2="Vrednost Lager"
                    Label3="Gotov proizvod (7 dana)"
                    Label4="Aktivni Nalozi"
                    Icon1="bi-cash-coin"
                    Icon2="bi-box-seam"
                    Icon3="bi-gear"
                    Icon4="bi-clipboard-check" />

    <!-- Charts Section -->
    <DashboardCharts />


</div>

@code {
    private decimal ukupnoSaldo = 0;
    private decimal ukupnaVrednostLager = 0;
    private decimal ukupnaProizvodnja = 0;
    private int brojAktivnihNaloga = 0;

    protected override async Task OnInitializedAsync()
    {
        await UcitajStatistike();
    }

    private async Task UcitajStatistike()
    {
        try
        {
            // Filter za ukupno saldo (zadnji mesec)
            var filterMesec = new FilterRequest
            {
                OdDatum = DateTime.Now.AddMonths(-1),
                DoDatum = DateTime.Now
            };

            ukupnoSaldo = await FinansijeService.UcitajUkupnoSaldo(filterMesec);
            ukupnaProizvodnja = await ProizvodnjaService.UcitajGotoveProizvodePoslednjihDana(7);
            brojAktivnihNaloga = await ProizvodnjaService.UcitajBrojAktivnihNaloga(filterMesec);
            ukupnaVrednostLager = await LagerService.UcitajUkupnuVrednostLager();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Greška pri učitavanju statistika: {ex.Message}");
        }
    }

    private void NavigateToFinansije()
    {
        NavigationManager.NavigateTo("/finansije");
    }

    private void NavigateToProizvodnja()
    {
        NavigationManager.NavigateTo("/proizvodnja");
    }

    private void NavigateToLager()
    {
        NavigationManager.NavigateTo("/lager");
    }

    private void NavigateToIzvjestaji()
    {
        NavigationManager.NavigateTo("/izvjestaji");
    }
}
