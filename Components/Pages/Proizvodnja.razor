@page "/proizvodnja"
@using FruitSysWeb.Services.Interfaces
@using FruitSysWeb.Services.Models.Requests
@using FruitSysWeb.Models
@inject IProizvodnjaService ProizvodnjaService
@inject IExportService ExportService
@inject IJSRuntime JSRuntime

<style>
    .production-section {
        margin-bottom: 2rem;
    }
    
    .section-title {
        color: #0f5132;
        border-bottom: 2px solid #198754;
        padding-bottom: 0.5rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
    }
    
    .dashboard-card {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 1rem;
    }
    
    .metric-card {
        text-align: center;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 1rem;
        transition: all 0.3s ease;
    }
    
    .metric-card:hover {
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        transform: translateY(-2px);
    }
</style>

<div class="container-fluid">
    <!-- Header -->
    <div class="bg-success text-white py-3 mb-4">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 class="h3 mb-0">
                        <i class="bi bi-gear-fill me-2"></i>
                        Proizvodnja - Detaljni izveštaj
                    </h1>
                </div>
                <div class="col-md-6 text-end">
                    <span class="badge bg-light text-dark fs-6">
                        <i class="bi bi-list-ul me-1"></i>@(podaci?.Count ?? 0) naloga
                    </span>
                    <span class="badge bg-warning text-dark ms-2 fs-6">
                        Ukupno: @ukupnaProizvodnja.ToString("N2") kg
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-success">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-funnel me-2"></i>Filteri pretrage
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-2">
                            <label class="form-label fw-bold">Od datuma:</label>
                            <input type="date" class="form-control" value="@OdDatumValue" @onchange="OnOdDatumChanged" />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-bold">Do datuma:</label>
                            <input type="date" class="form-control" value="@DoDatumValue" @onchange="OnDoDatumChanged" />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-bold">Radni nalog:</label>
                            <input type="text" class="form-control" value="@RadniNalogValue" @oninput="OnRadniNalogChanged" placeholder="Unesite broj naloga..." />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-bold">Tip artikla:</label>
                            <select class="form-select" @bind="filterRequest.TipArtikla">
                                <option value="">Svi tipovi</option>
                                <option value="1">Sirovina</option>
                                <option value="2">Ambalaza</option>
                                <option value="3">Potrosni materijal</option>
                                <option value="4">Gotova roba</option>
                                <option value="5">Oprema</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-bold">Min količina:</label>
                            <input type="number" class="form-control" @bind="filterRequest.MinKolicina" placeholder="0.00" step="0.01" />
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <div class="d-grid gap-2 w-100">
                                <button class="btn btn-success" @onclick="UcitajPodatke">
                                    <i class="bi bi-search me-2"></i>Učitaj
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-12">
                            <div class="d-flex gap-2">
                                <button class="btn btn-outline-secondary" @onclick="ResetujFiltere">
                                    <i class="bi bi-arrow-clockwise me-2"></i>Resetuj
                                </button>
                                <button class="btn btn-primary" @onclick="ExportToExcel" disabled="@(podaci?.Count == 0)">
                                    <i class="bi bi-file-earmark-excel me-2"></i>Excel
                                </button>
                                <button class="btn btn-danger" @onclick="ExportToPdf" disabled="@(podaci?.Count == 0)">
                                    <i class="bi bi-file-earmark-pdf me-2"></i>PDF
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards - DODATNI IZVEŠTAJ -->
    <div class="row mb-4 production-section">
        <div class="col-md-3">
            <div class="metric-card bg-primary text-white">
                <h6>Ukupna proizvodnja</h6>
                <h3>@ukupnaProizvodnja.ToString("N2") kg</h3>
                <small>za izabrani period</small>
            </div>
        </div>
        <div class="col-md-3">
            <div class="metric-card bg-info text-white">
                <h6>Broj radnih naloga</h6>
                <h3>@(podaci?.Count ?? 0)</h3>
                <small>ukupno naloga</small>
            </div>
        </div>
        <div class="col-md-3">
            <div class="metric-card bg-warning text-dark">
                <h6>Aktivni nalozi</h6>
                <h3>@brojAktivnihNaloga</h3>
                <small>trenutno u radu</small>
            </div>
        </div>
        <div class="col-md-3">
            <div class="metric-card bg-success text-white">
                <h6>Prosečna dnevna proizvodnja</h6>
                <h3>@prosecnaDnevnaProizvodnja.ToString("N2") kg</h3>
                <small>po danu</small>
            </div>
        </div>
    </div>

    <!-- Charts and Analytics - DODATNI IZVEŠTAJ -->
    @if (proizvodnjaPoArtiklima?.Any() == true || proizvodnjaPoKomitentima?.Any() == true)
    {
        <div class="row mb-4 production-section">
            <div class="col-md-6">
                <div class="dashboard-card">
                    <h5 class="section-title">
                        <i class="bi bi-box-seam me-2"></i>Top 10 Artikala po proizvodnji
                    </h5>
                    @if (proizvodnjaPoArtiklima?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Artikal</th>
                                        <th class="text-end">Količina</th>
                                        <th class="text-end">%</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var ukupnoArtikli = proizvodnjaPoArtiklima.Values.Sum();
                                    }
                                    @foreach (var artikal in proizvodnjaPoArtiklima.Take(10))
                                    {
                                        <tr>
                                            <td>@artikal.Key</td>
                                            <td class="text-end fw-bold">@artikal.Value.ToString("N2")</td>
                                            <td class="text-end">@((artikal.Value / ukupnoArtikli * 100).ToString("N1"))%</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Nema podataka o proizvodnji po artiklima</p>
                    }
                </div>
            </div>
            <div class="col-md-6">
                <div class="dashboard-card">
                    <h5 class="section-title">
                        <i class="bi bi-people me-2"></i>Top 10 Komitenata po proizvodnji
                    </h5>
                    @if (proizvodnjaPoKomitentima?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Komitent</th>
                                        <th class="text-end">Količina</th>
                                        <th class="text-end">%</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var ukupnoKomitenti = proizvodnjaPoKomitentima.Values.Sum();
                                    }
                                    @foreach (var komitent in proizvodnjaPoKomitentima.Take(10))
                                    {
                                        <tr>
                                            <td>@komitent.Key</td>
                                            <td class="text-end fw-bold">@komitent.Value.ToString("N2")</td>
                                            <td class="text-end">@((komitent.Value / ukupnoKomitenti * 100).ToString("N1"))%</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Nema podataka o proizvodnji po komitentima</p>
                    }
                </div>
            </div>
        </div>

        <!-- Analiza po tipovima artikala - DODATNI IZVEŠTAJ -->
        @if (proizvodnjaPoTipovima?.Any() == true)
        {
            <div class="row mb-4 production-section">
                <div class="col-12">
                    <div class="dashboard-card">
                        <h5 class="section-title">
                            <i class="bi bi-pie-chart me-2"></i>Proizvodnja po tipovima artikala
                        </h5>
                        <div class="row">
                            @foreach (var tip in proizvodnjaPoTipovima)
                            {
                                var tipNaziv = tip.Key switch {
                                    1 => "Sirovina",
                                    2 => "Ambalaza", 
                                    3 => "Potrosni materijal",
                                    4 => "Gotova roba",
                                    5 => "Oprema",
                                    _ => $"Tip {tip.Key}"
                                };
                                var procenat = ukupnaProizvodnja > 0 ? (tip.Value / ukupnaProizvodnja * 100) : 0;
                                
                                <div class="col-md-2">
                                    <div class="text-center p-3 border rounded">
                                        <h6 class="text-muted">@tipNaziv</h6>
                                        <h4 class="text-primary">@tip.Value.ToString("N2")</h4>
                                        <small class="text-muted">@procenat.ToString("N1")%</small>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }

    <!-- Najproduktivniji radni nalozi - DODATNI IZVEŠTAJ -->
    @if (najproduktivnijiNalozi?.Any() == true)
    {
        <div class="row mb-4 production-section">
            <div class="col-12">
                <div class="dashboard-card">
                    <h5 class="section-title">
                        <i class="bi bi-trophy me-2"></i>Top 10 najproduktivnijih radnih naloga
                    </h5>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead class="table-dark">
                                <tr>
                                    <th>Rank</th>
                                    <th>Datum</th>
                                    <th>Radni Nalog</th>
                                    <th>Artikal</th>
                                    <th>Komitent</th>
                                    <th class="text-end">Količina</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < najproduktivnijiNalozi.Count; i++)
                                {
                                    var nalog = najproduktivnijiNalozi[i];
                                    <tr>
                                        <td>
                                            @if (i == 0) { <span class="badge bg-warning">🥇 1.</span> }
                                            else if (i == 1) { <span class="badge bg-secondary">🥈 2.</span> }
                                            else if (i == 2) { <span class="badge bg-warning text-dark">🥉 3.</span> }
                                            else { <span class="badge bg-light text-dark">@(i + 1).</span> }
                                        </td>
                                        <td>@nalog.Datum?.ToString("dd.MM.yyyy")</td>
                                        <td>@nalog.RadniNalog</td>
                                        <td>@nalog.Artikal</td>
                                        <td>@nalog.Komitent</td>
                                        <td class="text-end fw-bold text-success">@nalog.Kolicina.ToString("N2")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Main Data Table -->
    @if (podaci == null)
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            Učitavanje podataka...
        </div>
    }
    else if (!podaci.Any())
    {
        <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle me-2"></i>
            Nema podataka za prikaz sa trenutnim filterima.
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-list-check me-2"></i>
                            Svi radni nalozi
                            <span class="badge bg-success ms-2">@podaci.Count stavki</span>
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Datum</th>
                                        <th>Radni Nalog</th>
                                        <th>Artikal</th>
                                        <th>Tip</th>
                                        <th class="text-end">Količina</th>
                                        <th>Komitent</th>
                                        <th>Klasifikacija</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in podaci)
                                    {
                                        <tr>
                                            <td>@item.Datum?.ToString("dd.MM.yyyy")</td>
                                            <td>
                                                <span class="badge bg-info">@item.RadniNalog</span>
                                            </td>
                                            <td>@item.Artikal</td>
                                            <td>
                                                @{
                                                    var tipClass = item.TipArtikla switch {
                                                        1 => "bg-primary",
                                                        2 => "bg-warning text-dark",
                                                        3 => "bg-secondary", 
                                                        4 => "bg-success",
                                                        5 => "bg-danger",
                                                        _ => "bg-light text-dark"
                                                    };
                                                    var tipNaziv = item.TipArtikla switch {
                                                        1 => "Sirovina",
                                                        2 => "Ambalaza",
                                                        3 => "Potrosni mat.",
                                                        4 => "Gotova roba",
                                                        5 => "Oprema",
                                                        _ => $"Tip {item.TipArtikla}"
                                                    };
                                                }
                                                <span class="badge @tipClass">@tipNaziv</span>
                                            </td>
                                            <td class="text-end fw-bold">@item.Kolicina.ToString("N2")</td>
                                            <td>@item.Komitent</td>
                                            <td>@item.Klasifikacija</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="table-secondary">
                                    <tr>
                                        <th colspan="4" class="text-end">UKUPNO:</th>
                                        <th class="text-end text-success">@podaci.Sum(x => x.Kolicina).ToString("N2")</th>
                                        <th colspan="2"></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer bg-light">
                        <div class="row">
                            <div class="col-md-6">
                                Poslednje ažuriranje: @DateTime.Now.ToString("dd.MM.yyyy HH:mm:ss")
                            </div>
                            <div class="col-md-6 text-end">
                                Period: @(filterRequest.OdDatum?.ToString("dd.MM") ?? "...") - @(filterRequest.DoDatum?.ToString("dd.MM.yyyy") ?? "...")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<ProizvodnjaModel> podaci = new List<ProizvodnjaModel>();
    private FilterRequest filterRequest = new FilterRequest();
    
    // DODATNI IZVEŠTAJ - statistike
    private decimal ukupnaProizvodnja = 0;
    private int brojAktivnihNaloga = 0;
    private decimal prosecnaDnevnaProizvodnja = 0;
    private Dictionary<string, decimal>? proizvodnjaPoArtiklima;
    private Dictionary<string, decimal>? proizvodnjaPoKomitentima;
    private Dictionary<int, decimal>? proizvodnjaPoTipovima;
    private List<ProizvodnjaModel>? najproduktivnijiNalozi;

    private string OdDatumValue => filterRequest.OdDatum?.ToString("yyyy-MM-dd") ?? "";
    private string DoDatumValue => filterRequest.DoDatum?.ToString("yyyy-MM-dd") ?? "";
    private string RadniNalogValue => filterRequest.RadniNalog ?? "";

    protected override async Task OnInitializedAsync()
    {
        var pocetakMeseca = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
        filterRequest.OdDatum = pocetakMeseca;
        filterRequest.DoDatum = DateTime.Now;
        
        await UcitajPodatke();
    }

    private void OnOdDatumChanged(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value?.ToString(), out var date))
        {
            filterRequest.OdDatum = date;
        }
    }

    private void OnDoDatumChanged(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value?.ToString(), out var date))
        {
            filterRequest.DoDatum = date;
        }
    }

    private void OnRadniNalogChanged(ChangeEventArgs e)
    {
        filterRequest.RadniNalog = e.Value?.ToString();
    }

    private async Task UcitajPodatke()
    {
        try
        {
            // Osnovni podaci
            podaci = await ProizvodnjaService.UcitajIzvestajProizvodnje(filterRequest);
            
            // DODATNI IZVEŠTAJ - statistike
            ukupnaProizvodnja = await ProizvodnjaService.UcitajUkupnuProizvodnju(filterRequest);
            brojAktivnihNaloga = await ProizvodnjaService.UcitajBrojAktivnihNaloga(filterRequest);
            
            // Izračunaj prosečnu dnevnu proizvodnju
            if (filterRequest.OdDatum.HasValue && filterRequest.DoDatum.HasValue)
            {
                var dana = (filterRequest.DoDatum.Value - filterRequest.OdDatum.Value).Days + 1;
                prosecnaDnevnaProizvodnja = dana > 0 ? ukupnaProizvodnja / dana : 0;
            }
            else
            {
                prosecnaDnevnaProizvodnja = 0;
            }

            // DODATNI IZVEŠTAJ - analize
            proizvodnjaPoArtiklima = await ProizvodnjaService.UcitajProizvodnjuPoArtiklima(filterRequest);
            proizvodnjaPoKomitentima = await ProizvodnjaService.UcitajProizvodnjuPoKomitentima(filterRequest);
            proizvodnjaPoTipovima = await ProizvodnjaService.UcitajProizvodnjuPoTipovima(filterRequest);
            najproduktivnijiNalozi = await ProizvodnjaService.UcitajNajproduktivnijeNaloge(filterRequest, 10);

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Greška pri učitavanju podataka: {ex.Message}");
            podaci = new List<ProizvodnjaModel>();
            ukupnaProizvodnja = 0;
            brojAktivnihNaloga = 0;
            prosecnaDnevnaProizvodnja = 0;
        }
    }

    private async Task ResetujFiltere()
    {
        var pocetakMeseca = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
        filterRequest = new FilterRequest
        {
            OdDatum = pocetakMeseca,
            DoDatum = DateTime.Now
        };
        
        await UcitajPodatke();
    }

    private async Task ExportToExcel()
    {
        try
        {
            var excelData = ExportService.ExportToExcel(podaci);
            var fileName = $"proizvodnja_export_{DateTime.Now:yyyyMMdd_HHmmss}.xlsx";
            await DownloadFile(excelData, fileName, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Greška pri exportu u Excel: {ex.Message}");
        }
    }

    private async Task ExportToPdf()
    {
        try
        {
            var pdfData = ExportService.ExportToPdf(podaci);
            var fileName = $"proizvodnja_export_{DateTime.Now:yyyyMMdd_HHmmss}.pdf";
            await DownloadFile(pdfData, fileName, "application/pdf");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Greška pri exportu u PDF: {ex.Message}");
        }
    }

    private async Task DownloadFile(byte[] data, string fileName, string mimeType)
    {
        await JSRuntime.InvokeVoidAsync("downloadFile", Convert.ToBase64String(data), fileName, mimeType);
    }
}